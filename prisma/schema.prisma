generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Proprietario {
  id                  Int          @id @default(autoincrement())
  nomeCompleto        String
  email               String       @unique
  telefone            String?
  cpf                 String
  cnpj                String
  nomeImobiliaria     String?
  enderecoImobiliaria String?
  senha               String
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt

  accounts            Account[]
  sessions            Session[]
  imoveis             Imovel[]     // Relacionamento com Imovel
}

model Account {
  id                 Int          @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user Proprietario  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int          @id @default(autoincrement())
  sessionToken String       @unique
  userId       Int
  expires      DateTime

  user Proprietario  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         Int          @id @default(autoincrement())
  identifier String
  token      String       @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Funcionario {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  telefone  String?
  senha     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Inquilino {
  id              Int      @id @default(autoincrement())
  nome            String
  email           String   @unique
  telefone        String?
  cpf             String   @unique
  dataNascimento  DateTime
  senha           String
  isFirstLogin    Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Imovel {
  id             Int      @id @default(autoincrement())
  nomeImovel     String
  tipoPropriedade String
  endereco       String
  tamanho        String
  proprietario   Proprietario @relation(fields: [proprietarioId], references: [id])
  proprietarioId Int

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
